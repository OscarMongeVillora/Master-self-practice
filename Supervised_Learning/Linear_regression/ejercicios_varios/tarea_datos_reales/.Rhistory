rm(list=ls())
#Carga los datos de inmuebles que se encuentran en la carpeta data_in
load("./data_in/inmuebles.Rdata")
#Visualiza previamente los datos
View(data_scrap)
#Realiza el subsetting de los datos
data_scrap<-data_scrap[which(data_scrap$level5 %in% c("Fuenlabrada","Legan\u00e9s","Getafe","Alcorc\u00f3n")),]
# Calcula la media y varianza muestral de las variables precio, habitaciones, superficie y banos
sapply(data_scrap[,c("price","rooms","surface","bathrooms")],function(x){round(mean(x,na.rm=T),2)})
#Realice el calculo por localidad
aggregate(data_scrap[,c("price","rooms","surface","bathrooms")], by = list(localidad=data_scrap$level5), FUN = function(x){round(mean(x,na.rm=T),2)})
#Cual es la vivienda mas cara de cada localidad?
aggregate(data_scrap[,c("price")], by = list(localidad=data_scrap$level5), FUN = function(x){round(max(x,na.rm=T),2)})
pal <- colorFactor(
palette = 'Dark2',
domain = data_scrap$level5
)
my_map <- leaflet() %>%
addTiles() %>%  # use the default base map which is OpenStreetMap tiles
addCircleMarkers(lng=data_scrap$longitude,lat=data_scrap$latitude, radius = 5,  popup=factor(data_scrap$id_realEstates) ,color = pal(data_scrap$level5))
my_map
data_scrap<-data_scrap[which(data_scrap$latitude !=0 | data_scrap$longitude!=0),]
my_map <- leaflet() %>%
addTiles() %>%  # use the default base map which is OpenStreetMap tiles
addCircleMarkers(lng=data_scrap$longitude,lat=data_scrap$latitude, radius = 5,  popup=factor(data_scrap$id_realEstates) ,color = pal(data_scrap$level5))
my_map
#que puedes decir de las variables de precio y superficie en metros cuadrados?
cor(data_scrap$surface,data_scrap$price)
#soluciona el problema (si lo hay)
data_scrap<-data_scrap[which(!is.na(data_scrap$surface) & !is.na(data_scrap$price)),]
cor(data_scrap$surface,data_scrap$price)
plot(data_scrap$surface,data_scrap$price)
lm_model<-lm(price ~ surface,data=data_scrap)
abline(lm_model,col="red",lwd=3)
summary(lm_model)
rm(list=ls())
#Carga los datos de inmuebles que se encuentran en la carpeta data_in
load("./data_in/inmuebles.Rdata")
View(data_scrap)
"\u00f1"
rm(list=ls())
#Carga los datos de inmuebles que se encuentran en la carpeta data_in
load("./data_in/inmuebles.Rdata")
#Visualiza previamente los datos
View(data_scrap)
#El objetivo es realizar un modelo de regresion para predecir el precio del sur de Madrid ("Fuenlabrada","Legan\u00e9s","Getafe","Alcorc\u00f3n")
#Realiza el subsetting de los datos
data_scrap<-data_scrap[which(data_scrap$level5 %in% c("Fuenlabrada","Legan\u00e9s","Getafe","Alcorc\u00f3n")),]
pal <- colorFactor(
palette = 'Dark2',
domain = data_scrap$level5
)
data_scrap$level5
data_scrap$level4
data_scrap$level3
data_scrap$level2
data_scrap$level1
pal <- colorFactor(
palette = 'Dark2',
domain = data_scrap$level5
)
my_map <- leaflet() %>%
addTiles() %>%  # use the default base map which is OpenStreetMap tiles
addCircleMarkers(lng=data_scrap$longitude,lat=data_scrap$latitude, radius = 5,  popup=factor(data_scrap$id_realEstates) ,color = pal(data_scrap$level5))
my_map
