abline(lm(y~x9))
plot(x10,y)
abline(lm(y~x10))
plot(x11,y)
abline(lm(y~x11))
plot(x12,y)
abline(lm(y~x12))
plot(x13,y)
abline(lm(y~x13))
plot(x1,y)
abline(lm(y~x1))
plot(x2,y)
abline(lm(y~x2))
plot(x3,y)
abline(lm(y~x3))
plot(x4,y)
abline(lm(y~x4))
plot(x5,y)
abline(lm(y~x5))
plot(x6,y)
abline(lm(y~x6))
plot(x7,y)
abline(lm(y~x7))
plot(x9,y)
abline(lm(y~x9))
plot(x10,y)
abline(lm(y~x10))
plot(x11,y)
abline(lm(y~x11))
plot(x12,y)
abline(lm(y~x12))
plot(x13,y)
abline(lm(y~x13))
y<-my_data$MEDV     # valor mediano de las casas en miles de dólares
x1<-my_data$CRIM    # tasa de crimen
x2<-my_data$ZN     # proporción terreno residencial
x3<-my_data$INDUS    # proporción de terreno industrial
x4<-my_data$CHAS      # variable dicotomica (=1 zona con rio; 0 sin rio)
x5<-my_data$NOX      # concentración de oxido nitroso
x6<-my_data$RM       # número medio de habitaciones
x7<-my_data$AGE      # proporción de casa contruidas antes de 1940
x8<-my_data$DIS      # distancia a oficinas de empleo
x9<-my_data$RAD      # indice de acceso a carreteras de circunvalación
x10<-my_data$TAX      # tasa de impuestos sobre el precio de la casa por cada $10,000
x11<-my_data$PTRATIO  # ratio estudiante/maestro en las escuelas
x12<-my_data$B        # 1000*(Bk-0.63)^2 donde Bk es la proporción de inmigrantes
x13<-my_data$LSTAT    # porcentaje de población de clase baja
par(mfcol=c(3,4))
plot(x1,y)
abline(lm(y~x1))
plot(x2,y)
abline(lm(y~x2))
plot(x3,y)
abline(lm(y~x3))
plot(x4,y)
abline(lm(y~x4))
plot(x5,y)
abline(lm(y~x5))
plot(x6,y)
abline(lm(y~x6))
plot(x7,y)
abline(lm(y~x7))
plot(x9,y)
abline(lm(y~x9))
plot(x10,y)
abline(lm(y~x10))
plot(x11,y)
abline(lm(y~x11))
plot(x12,y)
abline(lm(y~x12))
plot(x13,y)
abline(lm(y~x13))
plot(x1,y)
abline(lm(y~x1))
plot(x2,y)
abline(lm(y~x2))
plot(x3,y)
abline(lm(y~x3))
plot(x4,y)
abline(lm(y~x4))
plot(x5,y)
abline(lm(y~x5))
plot(x6,y)
abline(lm(y~x6))
plot(x7,y)
abline(lm(y~x7))
plot(x9,y)
abline(lm(y~x9))
plot(x10,y)
abline(lm(y~x10))
plot(x11,y)
abline(lm(y~x11))
plot(x12,y)
abline(lm(y~x12))
plot(x13,y)
abline(lm(y~x13))
plot(x1,y)
abline(lm(y~x1))
plot(x2,y)
abline(lm(y~x2))
plot(x3,y)
abline(lm(y~x3))
plot(x4,y)
abline(lm(y~x4))
plot(x5,y)
abline(lm(y~x5))
plot(x6,y)
abline(lm(y~x6))
plot(x7,y)
abline(lm(y~x7))
plot(x9,y)
abline(lm(y~x9))
plot(x10,y)
abline(lm(y~x10))
plot(x11,y)
abline(lm(y~x11))
plot(x12,y)
abline(lm(y~x12))
plot(x13,y)
abline(lm(y~x13))
plot(x1,y)
abline(lm(y~x1))
par( mfcol = c( 1, 2))
y<-my_data$MEDV
hist(y,prob=T,main="Histograma de Frecuencias Relativas, variable MEDV",ylab=
"Densidad", xlab="MEDV")
lines(density(y),col="blue")
qqnorm(y,main="Normal Q-Q Plot, variable MEDV",ylab="Cuantiles de Muestra",
xlab="Cuantiles Teóricos")
qqline(y,col="blue")
lillie.test(y)
par(mfcol=c(3,4))
plot(x1,y)
abline(lm(y~x1))
plot(x2,y)
abline(lm(y~x2))
plot(x3,y)
abline(lm(y~x3))
plot(x4,y)
abline(lm(y~x4))
plot(x5,y)
abline(lm(y~x5))
plot(x6,y)
abline(lm(y~x6))
plot(x7,y)
abline(lm(y~x7))
plot(x9,y)
abline(lm(y~x9))
plot(x10,y)
abline(lm(y~x10))
plot(x11,y)
abline(lm(y~x11))
plot(x12,y)
abline(lm(y~x12))
plot(x13,y)
abline(lm(y~x13))
---------------------------------------------------------------------------------------------- #
if (!require("nortest")){install.packages("nortest",verbose = F) ; library("nortest")}
if (!require("data.table")){install.packages("data.table",verbose = F) ; library("data.table")}
if (!require("stats")){install.packages("stats",verbose = F) ; library("stats")}
if (!require("car")){install.packages("car",verbose = F) ; library("car")}
if (!require("corrplot")){install.packages("corrplot",verbose = F) ; library("corrplot")}
print("All packages and functions have been installed or loaded...")
par(mfcol=c(3,4))
plot(x1,y)
abline(lm(y~x1))
plot(x2,y)
abline(lm(y~x2))
plot(x3,y)
abline(lm(y~x3))
plot(x4,y)
abline(lm(y~x4))
plot(x5,y)
abline(lm(y~x5))
plot(x6,y)
abline(lm(y~x6))
plot(x7,y)
abline(lm(y~x7))
plot(x9,y)
abline(lm(y~x9))
plot(x10,y)
abline(lm(y~x10))
plot(x11,y)
abline(lm(y~x11))
plot(x12,y)
abline(lm(y~x12))
plot(x13,y)
abline(lm(y~x13))
# Notese que, para la variable x8 hemos tenido una mejora considerable, por lo que la
# transformacion es correcta.
par(mfcol=c(1,2))
plot(x8,y)
abline(lm(y~x8))
plot(log(x8),y)
abline(lm(y~log(x8)))
par( mfcol = c( 1, 2))
y<-my_data$MEDV
hist(y,prob=T,main="Histograma de Frecuencias Relativas, variable MEDV",ylab=
"Densidad", xlab="MEDV")
lines(density(y),col="blue")
qqnorm(y,main="Normal Q-Q Plot, variable MEDV",ylab="Cuantiles de Muestra",
xlab="Cuantiles Teóricos")
qqline(y,col="blue")
lillie.test(y)
lillie.test(y)
y<-log(y)
hist(y,prob=T,main="Histograma de Frecuencias Relativas, variable log(MEDV)",ylab=
"Densidad", xlab="MEDV")
lines(density(y),col="blue")
qqnorm(y,main="Normal Q-Q Plot, variable log(MEDV)",ylab="Cuantiles de Muestra",
xlab="Cuantiles Teóricos")
qqline(y,col="blue")
lillie.test(y)
par( mfcol = c( 1, 2))
y<-my_data$MEDV
hist(y,prob=T,main="Histograma de Frecuencias Relativas, variable MEDV",ylab=
"Densidad", xlab="MEDV")
lines(density(y),col="blue")
qqnorm(y,main="Normal Q-Q Plot, variable MEDV",ylab="Cuantiles de Muestra",
xlab="Cuantiles Teóricos")
qqline(y,col="blue")
lillie.test(y)
shapiro.test(y)
y<-log(y)
hist(y,prob=T,main="Histograma de Frecuencias Relativas, variable log(MEDV)",ylab=
"Densidad", xlab="MEDV")
lines(density(y),col="blue")
qqnorm(y,main="Normal Q-Q Plot, variable log(MEDV)",ylab="Cuantiles de Muestra",
xlab="Cuantiles Teóricos")
qqline(y,col="blue")
lillie.test(y)
shapiro.test(y)
cor(y, x8)
cor(y, log(x8))
#verify type of variable for each column
sapply(my_data,function class(x))
#verify type of variable for each column
sapply(my_data,function class)
corrplot(M, method = "color",
col=col1(100), #eliges el color
addCoef.col = "black", #color de los coeficientes
tl.col="black", #color de las letras de los ejes
tl.cex=1, #Tamaño de la letra de los ejes
tl.srt=45, #Rotación eje x
is.corr=T, #es una correlación? sí
cl.offset=1, #Separación de label con el corrplot
cl.cex=1/par("cex")
)
summary(lm(y~x8))
plot(lm(y~x8))
par( mfcol = c( 2, 2 ))
summary(lm(y~x8))
plot(lm(y~x8))
summary(lm(y~log(x8)))
plot(lm(y~log(x8)))
par( mfcol = c( 1, 1 ))
summary(lm(y~log(x8)))
plot(lm(y~log(x8)))
?abline
plot(x1,y)
abline(lm(y~x1))
plot(x2,y)
abline(lm(y~x2))
par(mfcol=c(1,2))
plot(x8,y)
abline(lm(y~x8))
plot(log(x8),y)
abline(lm(y~log(x8)))
cor(y, x8)
cor(y, log(x8))
plot(x1,y)
abline(lm(y~x1))
plot(x2,y)
abline(lm(y~x2))
plot(x3,y)
abline(lm(y~x3))
plot(x4,y)
abline(lm(y~x4))
corrplot(M, method = "color",
col=col1(100), #eliges el color
addCoef.col = "black", #color de los coeficientes
tl.col="black", #color de las letras de los ejes
tl.cex=1, #Tamaño de la letra de los ejes
tl.srt=45, #Rotación eje x
is.corr=T, #es una correlación? sí
cl.offset=1, #Separación de label con el corrplot
cl.cex=1/par("cex")
)
par( mfcol = c( 1, 1))
# Analisis de la hipotesis de distribucion gaussiana de la variable MEDV
par( mfcol = c( 1, 1))
corrplot(M, method = "color",
col=col1(100), #eliges el color
addCoef.col = "black", #color de los coeficientes
tl.col="black", #color de las letras de los ejes
tl.cex=1, #Tamaño de la letra de los ejes
tl.srt=45, #Rotación eje x
is.corr=T, #es una correlación? sí
cl.offset=1, #Separación de label con el corrplot
cl.cex=1/par("cex")
)
plot(lm(y~x2))
par( mfcol = c( 1, 2))
y<-my_data$MEDV
hist(y,prob=T,main="Histograma de Frecuencias Relativas, variable MEDV",ylab=
"Densidad", xlab="MEDV")
lines(density(y),col="blue")
qqnorm(y,main="Normal Q-Q Plot, variable MEDV",ylab="Cuantiles de Muestra",
xlab="Cuantiles Teóricos")
qqline(y,col="blue")
lillie.test(y)
shapiro.test(y)
par( mfcol = c( 2, 2 ))
summary(lm(y~x1))
plot(lm(y~x1))
summary(lm(y~x2))
plot(lm(y~x2))
summary(lm(y~x3))
plot(lm(y~x3))
summary(lm(y~x4))
plot(lm(y~x4))
summary(lm(y~x5))
plot(lm(y~x5))
summary(lm(y~x6))
plot(lm(y~log(x6)))
summary(lm(y~x7))
plot(lm(y~x7))
summary(lm(y~x8))
plot(lm(y~x8))
summary(lm(y~log(x8)))
plot(lm(y~log(x8)))
summary(lm(y~x9))
plot(lm(y~x9))
summary(lm(y~x10))
plot(lm(y~x10))
summary(lm(y~x11))
plot(lm(y~x11))
summary(lm(y~x12))
plot(lm(y~x12))
summary(lm(y~x13))
plot(lm(y~x13))
summary(lm(y~x1))
plot(lm(y~x1))
summary(lm(y~x2))
plot(lm(y~x2))
summary(lm(y~x3))
plot(lm(y~x3))
summary(lm(y~x4))
plot(lm(y~x4))
par( mfcol = c( 2, 2 ))
summary(lm(y~x1))
plot(lm(y~x1))
plot(lm(y~x2))
summary(lm(y~x2))
plot(lm(y~x2))
summary(lm(y~x3))
plot(lm(y~x3))
summary(lm(y~x4))
plot(lm(y~x4))
summary(lm(y~x5))
plot(lm(y~x5))
summary(lm(y~x6))
plot(lm(y~log(x6)))
plot(lm(y~x6))
summary(lm(y~x7))
plot(lm(y~x7))
summary(lm(y~x8))
plot(lm(y~x8))
summary(lm(y~log(x8)))
plot(lm(y~log(x8)))
summary(lm(y~x9))
plot(lm(y~x9))
summary(lm(y~x10))
plot(lm(y~x10))
summary(lm(y~x11))
plot(lm(y~x11))
model<-lm(y~x1+x2+x3+x4+x5+x6+x7+x8+x9+x10+x11+x12+x13)
summary(model)
###################Akaike Information Criteria###########################
step(model,trace=F)$anova
corrplot(M, method = "color",
col=col1(100), #eliges el color
addCoef.col = "black", #color de los coeficientes
tl.col="black", #color de las letras de los ejes
tl.cex=1, #Tamaño de la letra de los ejes
tl.srt=45, #Rotación eje x
is.corr=T, #es una correlación? sí
cl.offset=1, #Separación de label con el corrplot
cl.cex=1/par("cex")
)
# Analisis de la hipotesis de distribucion gaussiana de la variable MEDV
par( mfcol = c( 1, 1))
# Analisis de la hipotesis de distribucion gaussiana de la variable MEDV
par( mfcol = c( 1, 1))
corrplot(M, method = "color",
col=col1(100), #eliges el color
addCoef.col = "black", #color de los coeficientes
tl.col="black", #color de las letras de los ejes
tl.cex=1, #Tamaño de la letra de los ejes
tl.srt=45, #Rotación eje x
is.corr=T, #es una correlación? sí
cl.offset=1, #Separación de label con el corrplot
cl.cex=1/par("cex")
)
###################Akaike Information Criteria###########################
step(model,trace=F)$anova
model<-lm(y~x1+x2+x3+x4+x5+x6+x7+x8+x9+x10+x11+x12+x13)
summary(model)
model<-lm(y~x4+x5+x6+x8+x9+x10+x11+x12+x13)
summary(model)
model<-lm(y~x4+x5+x6+x8+x9+x10+x11+x12+x13)
summary(model)
###Factor de Inflación de la Varianza (VIF)######
vif(model)
model<-lm(y~x1+x2+x3+x4+x5+x6+x7+x8+x9+x10+x11+x12+x13)
summary(model)
vif(model)
model<-lm(y~x4+x5+x6+x8+x9+x10+x11+x12+x13)
summary(model)
###Factor de Inflación de la Varianza (VIF)######
vif(model)
model<-lm(y~x4+x5+x6+x8+x9+x11+x12+x13)
summary(model)
step(model,trace=F)$anova
#########Eliminamos la variable RAD(x9)##################
model<-lm(y~x4+x5+x6+x8+x11+x12+x13)
summary(model)
#############Calculamos nuevamente el VIF##################
vif(model)
model<-lm(y~x4+x5+x6+x8+x9+x11+x12+x13)
summary(model)
######Aplicamos nuevamente AIC#########
step(model,trace=F)$anova
###Factor de Inflación de la Varianza (VIF)######
vif(model)
model<-lm(y~x4+x5+x6+x8+x9+x11+x12+x13)
summary(model)
model<-lm(y~x4+x5+x6+x8+x11+x12+x13)
summary(model)
summary(model)
model<-lm(y~x4+x5+x6+x8+x9+x11+x12+x13)
summary(model)
######Aplicamos nuevamente AIC#########
step(model,trace=F)$anova
model<-lm(y~x4+x5+x6+x8+x11+x12+x13)
summary(model)
######Modelo eliminando la variable TAX(x10)###########
model<-lm(y~x5+x6+x8+x9+x11+x12+x13)
summary(model)
######Modelo eliminando la variable TAX(x10)###########
model<-lm(y~x4+x6+x8+x9+x11+x12+x13)
summary(model)
#########Eliminamos la variable RAD(x9)##################
model<-lm(y~x4+x5+x6+x8+x11+x12+x13)
######Modelo eliminando la variable TAX(x10)###########
model<-lm(y~x4+x5+x6+x8+x9+x11+x12+x13)
summary(model)
######Modelo eliminando la variable TAX(x10)###########
model<-lm(y~x4+x5+x6+x8+x9+x11+x12+x13)
summary(model)
######Modelo eliminando la variable TAX(x10)###########
model<-lm(y~x4+x5+x6+x8+x9+x11+x12+x13)
summary(model)
#########Eliminamos la variable RAD(x9)##################
model<-lm(y~x4+x5+x6+x8+x11+x12+x13)
summary(model)
model<-lm(y~x1+x2+x3+x4+x5+x6+x7+x8+x9+x10+x11+x12+x13)
summary(model)
model<-lm(y~x4+x5+x6+x8+x9+x10+x11+x12+x13)
summary(model)
model<-lm(y~x4+x5+x6+x8+x9+x11+x12+x13)
summary(model)
######Aplicamos nuevamente AIC#########
step(model,trace=F)$anova
model<-lm(y~x4+x5+x6+x8+x11+x12+x13)
summary(model)
#############Calculamos nuevamente el VIF##################
vif(model)
model<-lm(y~x4+x5+x6+x8+x11+x12+x13)
summary(model)
par(mfcol=c(2,2))
plot(model)
model<-lm(y~x4+x5+x6+x8+x11+x12+x13)
summary(model)
par(mfcol=c(2,2))
plot(model)
plot(model)
data_0<-data.frame(x4=0,x5=0.508,x6=5.575,x8=4.19,
x11=16.3, x12=321.9, x13=2.98)
pred_0<-exp(predict.lm(model,data_0,interval="confidence"))
pred_0
data_0<-data.frame(x4=0,x5=0.508,x6=5.575,x8=4.19,
x11=16.3, x12=321.9, x13=2.98)
pred_0<-exp(predict(model,data_0,interval="confidence"))
data_0<-data.frame(x4=0,x5=0.508,x6=5.575,x8=4.19,
x11=16.3, x12=321.9, x13=2.98)
pred_0<-exp(predict(model,data_0,interval="confidence"))
pred_0
data_1<-data.frame(x4=c(1, 2, 3), x5=(0.508, 2, 3) ,x6=(5.575, 2, 3)
,x8=(4.19,2, 3), x11=(1, 2, 16.3), x12=(321.9, 2, 3)
x13=(2.98, 2, 3))
data_1<-data.frame(x4=c(1, 2, 3), x5=(0.508, 2, 3) ,x6=(5.575, 2, 3)
,x8=(4.19,2, 3), x11=(1, 2, 16.3), x12=(321.9, 2, 3),
x13=(2.98, 2, 3))
data_1<-data.frame(x4=c(1, 2, 3), x5=(0.508, 2, 3), x6=(5.575, 2, 3),
x8=(4.19, 2, 3), x11=(1, 2, 16.3), x12=(321.9, 2, 3),
x13=(2.98, 2, 3))
data_1<-data.frame(x4=c(1, 2, 3), x5=c(0.508, 2, 3), x6=c(5.575, 2, 3),
x8=c(4.19, 2, 3), x11=c(1, 2, 16.3), x12=c(321.9, 2, 3),
x13=c(2.98, 2, 3))
pred_1<-exp(predict.lm(model,data_1,interval="confidence"))
pred_1
