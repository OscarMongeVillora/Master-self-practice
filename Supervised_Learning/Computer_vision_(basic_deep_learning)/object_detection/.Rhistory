load("C:/Users/Henry N/Google Drive/henavarr@math.uc3m.es 2018-07-10 23_17/KSchool/my_course/Supervised_Learning/Computer_vision_(basic_deep_learning)/object_detection/my_image.Rdata")
my_image<-load.image("pluto3.jpg")
my_image<-imager::resize(my_image,64,64)
my_image_array<-as.array(my_image)
dim(my_image_array)
image_test_data<-data.frame(matrix(ncol=64*64*3))
r <- matrix(my_image_array[,,,1]*255,ncol=64)
g <- matrix(my_image_array[,,,2]*255,ncol=64)
b <- matrix(my_image_array[,,,3]*255,ncol=64)
image_test_data[1,]<-c(as.vector(r),as.vector(g),as.vector(b))
ypred_image_test<-predict(my_logistic_model,image_test_data)
ypred_image_test
r <- matrix(my_image_array[,,,1],ncol=64)
dim(col) <- dim(r)
col<-t(col)
col <- rgb(r, g, b)
grid.raster(col, interpolate=FALSE)
b <- matrix(my_image_array[,,,3],ncol=64)
g <- matrix(my_image_array[,,,2],ncol=64)
my_image<-load.image("pluto3.jpg")
my_image<-imager::resize(my_image,64,64)
my_image_array<-as.array(my_image)
dim(my_image_array)
r <- matrix(my_image_array[,,,1],ncol=64)
g <- matrix(my_image_array[,,,2],ncol=64)
b <- matrix(my_image_array[,,,3],ncol=64)
col <- rgb(r, g, b)
dim(col) <- dim(r)
col<-t(col)
grid.raster(col, interpolate=FALSE)
my_image<-load.image("pluto3.jpg")
my_image<-imager::resize(my_image,64,64)
my_image_array<-as.array(my_image)
dim(my_image_array)
image_test_data<-data.frame(matrix(ncol=64*64*3))
r <- matrix(my_image_array[,,,1]*255,ncol=64)
g <- matrix(my_image_array[,,,2]*255,ncol=64)
b <- matrix(my_image_array[,,,3]*255,ncol=64)
image_test_data[1,]<-c(as.vector(r),as.vector(g),as.vector(b))
ypred_image_test<-predict(my_logistic_model,image_test_data)
ypred_image_test
rm(list=ls())
if (!require("Rcpp")){install.packages('Rcpp',repos='http://cran.us.r-project.org');library("Rcpp")}
if (!require("e1071")){install.packages('e1071');library("e1071")}
if (!require("grid")){install.packages("grid",verbose = F) ; library("grid")}
if (!require("stringi")){install.packages("stringi",verbose = F) ; library("stringi")}
if (!require("dplyr")){install.packages("dplyr",verbose = F) ; library("dplyr")}
if (!require("recipes")){install.packages("recipes",verbose = F) ; library("recipes")}
if (!require("caret")){install.packages("caret",quiet = T) ; library("caret")}
if (!require("RSNNS")){install.packages("RSNNS",verbose = F) ; library("RSNNS")}
if (!require("imager")){install.packages("imager",verbose = F) ; library("imager")}
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
library(rhdf5)
h5ls("./data_in/train_catvnoncat.h5")
h5ls("./data_in/train_catvnoncat.h5")
my_data_train_x <- h5read("./data_in/train_catvnoncat.h5","train_set_x")
my_data_train_y <- h5read("./data_in/train_catvnoncat.h5","train_set_y")
h5ls("./data_in/test_catvnoncat.h5")
my_data_test_x <- h5read("./data_in/test_catvnoncat.h5","test_set_x")
my_data_test_y <- h5read("./data_in/test_catvnoncat.h5","test_set_y")
my_data_train_x
dim(my_data_train_x)
64*64
r <- matrix(my_data_train_x[1,,,n]/255,ncol=64,nrow=64)
n<-3
r <- matrix(my_data_train_x[1,,,n]/255,ncol=64,nrow=64)
g <- matrix(my_data_train_x[2,,,n]/255,ncol=64)
b <- matrix(my_data_train_x[3,,,n]/255,ncol=64)
r
dim(r)
dim(g)
dim(b)
col <- rgb(r, g, b)
col
dim(col)
length(col)
64*64
dim(col) <- dim(r)
col
dim(col)
col<-t(col)
grid.raster(col, interpolate=FALSE)
n<-1
r <- matrix(my_data_train_x[1,,,n]/255,ncol=64,nrow=64)
g <- matrix(my_data_train_x[2,,,n]/255,ncol=64)
b <- matrix(my_data_train_x[3,,,n]/255,ncol=64)
col <- rgb(r, g, b)
dim(col) <- dim(r)
col<-t(col)
grid.raster(col, interpolate=FALSE)
n<-2
r <- matrix(my_data_train_x[1,,,n]/255,ncol=64,nrow=64)
g <- matrix(my_data_train_x[2,,,n]/255,ncol=64)
b <- matrix(my_data_train_x[3,,,n]/255,ncol=64)
col <- rgb(r, g, b)
dim(col) <- dim(r)
col<-t(col)
grid.raster(col, interpolate=FALSE)
for(i in 1:209){
print(i)
r <- matrix(my_data_train_x[1,,,i],ncol=64)
g <- matrix(my_data_train_x[2,,,i],ncol=64)
b <- matrix(my_data_train_x[3,,,i],ncol=64)
my_data_train[i,]<-c(as.vector(r),as.vector(g),as.vector(b))
}
my_data_train<-data.frame(matrix(ncol=64*64*3))
for(i in 1:209){
print(i)
r <- matrix(my_data_train_x[1,,,i],ncol=64)
g <- matrix(my_data_train_x[2,,,i],ncol=64)
b <- matrix(my_data_train_x[3,,,i],ncol=64)
my_data_train[i,]<-c(as.vector(r),as.vector(g),as.vector(b))
}
my_data_train_y
my_data_train<-cbind(Y=my_data_train_y,my_data_train)
head(my_data_train[,1:10])
my_data_test<-data.frame(matrix(ncol=64*64*3))
for(i in 1:50){
print(i)
r <- matrix(my_data_test_x[1,,,i],ncol=64)
g <- matrix(my_data_test_x[2,,,i],ncol=64)
b <- matrix(my_data_test_x[3,,,i],ncol=64)
my_data_test[i,]<-c(as.vector(r),as.vector(g),as.vector(b))
}
my_data_test<-cbind(Y=my_data_test_y,my_data_test)
load("C:/Users/Henry N/Google Drive/henavarr@math.uc3m.es 2018-07-10 23_17/KSchool/my_course/Supervised_Learning/Computer_vision_(basic_deep_learning)/object_detection/my_image.Rdata")
my_logistic_model
yhat_train_logistic
yhat_test_logistic
conf_matrix_train<-table(yhat_train_logistic,my_data_train$Y)
conf_matrix_train
conf_matrix_test<-table(yhat_test_logistic,my_data_test$Y)
conf_matrix_test
sum(diag(conf_matrix_test))/sum(conf_matrix_test)
conf_matrix_test<-table(pred=yhat_test_logistic,actual=my_data_test$Y)
conf_matrix_test
idx_tp<-which(yhat_test_logistic==1 & my_data_test$Y==1)
idx_tn<-which(yhat_test_logistic==0 & my_data_test$Y==0)
idx_fp<-which(yhat_test_logistic==1 & my_data_test$Y==0)
idx_fn<-which(yhat_test_logistic==0 & my_data_test$Y==1)
idx_fn
idx_fp
r <- matrix(my_data_test_x[1,,,n]/255,ncol=64)
g <- matrix(my_data_test_x[2,,,n]/255,ncol=64)
b <- matrix(my_data_test_x[3,,,n]/255,ncol=64)
col <- rgb(r, g, b)
dim(col) <- dim(r)
col<-t(col)
grid.raster(col, interpolate=FALSE)
n<-14
r <- matrix(my_data_test_x[1,,,n]/255,ncol=64)
g <- matrix(my_data_test_x[2,,,n]/255,ncol=64)
b <- matrix(my_data_test_x[3,,,n]/255,ncol=64)
col <- rgb(r, g, b)
dim(col) <- dim(r)
col<-t(col)
grid.raster(col, interpolate=FALSE)
idx_fn
idx_fp
my_image<-load.image("gato1.jpg")
my_image
my_image<-load.image("gato1.jpg")
my_image<-imager::resize(my_image,64,64)
my_image_array<-as.array(my_image)
dim(my_image_array)
dim(my_data_test)
dim(my_data_testx)
dim(my_data_test_x)
image_test_data<-data.frame(matrix(ncol=64*64*3))
r <- matrix(my_image_array[,,,1]*255,ncol=64)
g <- matrix(my_image_array[,,,2]*255,ncol=64)
b <- matrix(my_image_array[,,,3]*255,ncol=64)
image_test_data[1,]<-c(as.vector(r),as.vector(g),as.vector(b))
ypred_image_test<-predict(my_logistic_model,image_test_data)
ypred_image_test
r <- matrix(my_image_array[,,,1],ncol=64)
g <- matrix(my_image_array[,,,2],ncol=64)
b <- matrix(my_image_array[,,,3],ncol=64)
col <- rgb(r, g, b)
dim(col) <- dim(r)
col<-t(col)
grid.raster(col, interpolate=FALSE)
plot(my_image)
rm(list=ls())
#-------------------------------- Load packages --------------------------------------------#
if (!require("Rcpp")){install.packages('Rcpp',repos='http://cran.us.r-project.org');library("Rcpp")}
if (!require("e1071")){install.packages('e1071');library("e1071")}
if (!require("grid")){install.packages("grid",verbose = F) ; library("grid")}
if (!require("stringi")){install.packages("stringi",verbose = F) ; library("stringi")}
if (!require("dplyr")){install.packages("dplyr",verbose = F) ; library("dplyr")}
if (!require("recipes")){install.packages("recipes",verbose = F) ; library("recipes")}
if (!require("caret")){install.packages("caret",quiet = T) ; library("caret")}
if (!require("RSNNS")){install.packages("RSNNS",verbose = F) ; library("RSNNS")}
if (!require("imager")){install.packages("imager",verbose = F) ; library("imager")}
#----- Corra estas lineas en una sola ejecucion -----#
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
library(rhdf5)
#----- Fin: Corra estas lineas en una sola ejecucion -----#
library(rhdf5)
#----- Corra estas lineas en una sola ejecucion -----#
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
library(rhdf5)
if (!require("Rcpp")){install.packages('Rcpp',repos='http://cran.us.r-project.org');library("Rcpp")}
install.packages("yaml")
install.packages("rlang")
install.packages("dplyr")
#if (!require("Rcpp")){install.packages('Rcpp',repos='http://cran.us.r-project.org');library("Rcpp")}
if (!require("Rcpp")){install.packages('Rcpp',quiet=T);library("Rcpp")}
if (!require("e1071")){install.packages('e1071');library("e1071")}
if (!require("grid")){install.packages("grid",quiet=T) ; library("grid")}
if (!require("stringi")){install.packages("stringi",quiet=T) ; library("stringi")}
if (!require("dplyr")){install.packages("dplyr",quiet=T) ; library("dplyr")}
if (!require("recipes")){install.packages("recipes",quiet=T) ; library("recipes")}
install.packages("prodlim")
if (!require("recipes")){install.packages("recipes",quiet=T) ; library("recipes")}
if (!require("caret")){install.packages("caret",quiet = T) ; library("caret")}
install.packages(ggplot2)
install.packages("ggplot2")
#if (!require("Rcpp")){install.packages('Rcpp',repos='http://cran.us.r-project.org');library("Rcpp")}
if (!require("Rcpp")){install.packages('Rcpp',quiet=T);library("Rcpp")}
if (!require("e1071")){install.packages('e1071');library("e1071")}
if (!require("grid")){install.packages("grid",quiet=T) ; library("grid")}
if (!require("stringi")){install.packages("stringi",quiet=T) ; library("stringi")}
if (!require("dplyr")){install.packages("dplyr",quiet=T) ; library("dplyr")}
if (!require("recipes")){install.packages("recipes",quiet=T) ; library("recipes")}
if (!require("caret")){install.packages("caret",quiet = T) ; library("caret")}
if (!require("RSNNS")){install.packages("RSNNS",quiet=T) ; library("RSNNS")}
if (!require("imager")){install.packages("imager",quiet=T) ; library("imager")}
install.packages("igraph")
install.packages("igraph")
#if (!require("Rcpp")){install.packages('Rcpp',repos='http://cran.us.r-project.org');library("Rcpp")}
if (!require("Rcpp")){install.packages('Rcpp',quiet=T);library("Rcpp")}
if (!require("e1071")){install.packages('e1071');library("e1071")}
if (!require("grid")){install.packages("grid",quiet=T) ; library("grid")}
if (!require("stringi")){install.packages("stringi",quiet=T) ; library("stringi")}
if (!require("dplyr")){install.packages("dplyr",quiet=T) ; library("dplyr")}
if (!require("recipes")){install.packages("recipes",quiet=T) ; library("recipes")}
if (!require("caret")){install.packages("caret",quiet = T) ; library("caret")}
if (!require("RSNNS")){install.packages("RSNNS",quiet=T) ; library("RSNNS")}
if (!require("imager")){install.packages("imager",quiet=T) ; library("imager")}
#if (!require("Rcpp")){install.packages('Rcpp',repos='http://cran.us.r-project.org');library("Rcpp")}
if (!require("Rcpp")){install.packages('Rcpp',quiet=T);library("Rcpp")}
if (!require("e1071")){install.packages('e1071');library("e1071")}
if (!require("grid")){install.packages("grid",quiet=T) ; library("grid")}
if (!require("stringi")){install.packages("stringi",quiet=T) ; library("stringi")}
if (!require("dplyr")){install.packages("dplyr",quiet=T) ; library("dplyr")}
if (!require("recipes")){install.packages("recipes",quiet=T) ; library("recipes")}
if (!require("caret")){install.packages("caret",quiet = T) ; library("caret")}
if (!require("RSNNS")){install.packages("RSNNS",quiet=T) ; library("RSNNS")}
if (!require("imager")){install.packages("imager",quiet=T) ; library("imager")}
#----- Corra estas lineas si no tiene instalada la librer?a rhdf5 -----#
#source("http://bioconductor.org/biocLite.R")
#biocLite("rhdf5")
library(rhdf5)
rm(list=ls())
#-------------------------------- Load data  --------------------------------------------#
h5ls("./data_in/train_catvnoncat.h5")
my_data_train_x <- h5read("./data_in/train_catvnoncat.h5","train_set_x")
my_data_train_y <- h5read("./data_in/train_catvnoncat.h5","train_set_y")
h5ls("./data_in/test_catvnoncat.h5")
my_data_test_x <- h5read("./data_in/test_catvnoncat.h5","test_set_x")
my_data_test_y <- h5read("./data_in/test_catvnoncat.h5","test_set_y")
n<-2
r <- matrix(my_data_train_x[1,,,n]/255,ncol=64,nrow=64)
g <- matrix(my_data_train_x[2,,,n]/255,ncol=64)
b <- matrix(my_data_train_x[3,,,n]/255,ncol=64)
col <- rgb(r, g, b)
dim(col) <- dim(r)
col<-t(col)
grid.raster(col, interpolate=FALSE)
my_data_train<-data.frame(matrix(ncol=64*64*3))
for(i in 1:209){
print(i)
r <- matrix(my_data_train_x[1,,,i],ncol=64)
g <- matrix(my_data_train_x[2,,,i],ncol=64)
b <- matrix(my_data_train_x[3,,,i],ncol=64)
my_data_train[i,]<-c(as.vector(r),as.vector(g),as.vector(b))
}
my_data_train<-cbind(Y=my_data_train_y,my_data_train)
#Test data
my_data_test<-data.frame(matrix(ncol=64*64*3))
for(i in 1:50){
print(i)
r <- matrix(my_data_test_x[1,,,i],ncol=64)
g <- matrix(my_data_test_x[2,,,i],ncol=64)
b <- matrix(my_data_test_x[3,,,i],ncol=64)
my_data_test[i,]<-c(as.vector(r),as.vector(g),as.vector(b))
}
my_data_test<-cbind(Y=my_data_test_y,my_data_test)
#Classic logistic regression Newton-Rhapson coefficients
my_model<-glm(factor(Y)~ ., binomial(link = "logit"), data = my_data_train)
load("C:/Users/Henry N/Google Drive/henavarr@math.uc3m.es 2018-07-10 23_17/Clases escuelas/KSchool/my_course/Supervised_Learning/Computer_vision_(basic_deep_learning)/object_detection/kschool.Rdata")
load("C:/Users/Henry N/Google Drive/henavarr@math.uc3m.es 2018-07-10 23_17/Clases escuelas/KSchool/my_course/Supervised_Learning/Computer_vision_(basic_deep_learning)/object_detection/my_image.Rdata")
rm(list=ls())
load("C:/Users/Henry N/Google Drive/henavarr@math.uc3m.es 2018-07-10 23_17/Clases escuelas/KSchool/my_course/Supervised_Learning/Computer_vision_(basic_deep_learning)/object_detection/kschool.Rdata")
load("C:/Users/Henry N/Google Drive/henavarr@math.uc3m.es 2018-07-10 23_17/Clases escuelas/KSchool/my_course/Supervised_Learning/Computer_vision_(basic_deep_learning)/object_detection/my_image.Rdata")
load("C:/Users/Henry N/Google Drive/henavarr@math.uc3m.es 2018-07-10 23_17/Clases escuelas/KSchool/my_course/Supervised_Learning/Computer_vision_(basic_deep_learning)/object_detection/kschool.Rdata")
load("C:/Users/Henry N/Google Drive/henavarr@math.uc3m.es 2018-07-10 23_17/Clases escuelas/KSchool/my_course/Supervised_Learning/Computer_vision_(basic_deep_learning)/object_detection/my_image.Rdata")
64+64+3
64*64*3
my_image<-load.image("gato1.jpg")
my_image<-imager::resize(my_image,64,64)
my_image_array<-as.array(my_image)
dim(my_image_array)
image_test_data<-data.frame(matrix(ncol=64*64*3))
r <- matrix(my_image_array[,,,1]*255,ncol=64)
g <- matrix(my_image_array[,,,2]*255,ncol=64)
b <- matrix(my_image_array[,,,3]*255,ncol=64)
image_test_data[1,]<-c(as.vector(r),as.vector(g),as.vector(b))
ypred_image_test<-predict(my_logistic_model,image_test_data)
ypred_image_test
my_image<-load.image("perro.jpg")
my_image<-imager::resize(my_image,64,64)
my_image_array<-as.array(my_image)
dim(my_image_array)
image_test_data<-data.frame(matrix(ncol=64*64*3))
r <- matrix(my_image_array[,,,1]*255,ncol=64)
g <- matrix(my_image_array[,,,2]*255,ncol=64)
b <- matrix(my_image_array[,,,3]*255,ncol=64)
image_test_data[1,]<-c(as.vector(r),as.vector(g),as.vector(b))
ypred_image_test<-predict(my_logistic_model,image_test_data)
ypred_image_test
#if (!require("Rcpp")){install.packages('Rcpp',repos='http://cran.us.r-project.org');library("Rcpp")}
if (!require("Rcpp")){install.packages('Rcpp',quiet=T);library("Rcpp")}
if (!require("e1071")){install.packages('e1071');library("e1071")}
if (!require("grid")){install.packages("grid",quiet=T) ; library("grid")}
if (!require("stringi")){install.packages("stringi",quiet=T) ; library("stringi")}
if (!require("dplyr")){install.packages("dplyr",quiet=T) ; library("dplyr")}
if (!require("recipes")){install.packages("recipes",quiet=T) ; library("recipes")}
if (!require("caret")){install.packages("caret",quiet = T) ; library("caret")}
if (!require("RSNNS")){install.packages("RSNNS",quiet=T) ; library("RSNNS")}
if (!require("imager")){install.packages("imager",quiet=T) ; library("imager")}
#----- Corra estas lineas si no tiene instalada la librer?a rhdf5 -----#
#source("http://bioconductor.org/biocLite.R")
#biocLite("rhdf5")
library(rhdf5)
#---------- Fin: Corra estas lineas en una sola ejecucion -------------#
print("All packages and functions have been installed or loaded...")
#if (!require("Rcpp")){install.packages('Rcpp',repos='http://cran.us.r-project.org');library("Rcpp")}
if (!require("Rcpp")){install.packages('Rcpp',quiet=T);library("Rcpp")}
if (!require("e1071")){install.packages('e1071');library("e1071")}
if (!require("grid")){install.packages("grid",quiet=T) ; library("grid")}
if (!require("stringi")){install.packages("stringi",quiet=T) ; library("stringi")}
if (!require("dplyr")){install.packages("dplyr",quiet=T) ; library("dplyr")}
if (!require("recipes")){install.packages("recipes",quiet=T) ; library("recipes")}
if (!require("caret")){install.packages("caret",quiet = T) ; library("caret")}
if (!require("RSNNS")){install.packages("RSNNS",quiet=T) ; library("RSNNS")}
if (!require("imager")){install.packages("imager",quiet=T) ; library("imager")}
#----- Corra estas lineas si no tiene instalada la librer?a rhdf5 -----#
#source("http://bioconductor.org/biocLite.R")
#biocLite("rhdf5")
library(rhdf5)
#---------- Fin: Corra estas lineas en una sola ejecucion -------------#
print("All packages and functions have been installed or loaded...")
rm(list=ls())
#-------------------------------- Load data  --------------------------------------------#
h5ls("./data_in/train_catvnoncat.h5")
my_data_train_x <- h5read("./data_in/train_catvnoncat.h5","train_set_x")
my_data_train_y <- h5read("./data_in/train_catvnoncat.h5","train_set_y")
h5ls("./data_in/test_catvnoncat.h5")
my_data_test_x <- h5read("./data_in/test_catvnoncat.h5","test_set_x")
my_data_test_y <- h5read("./data_in/test_catvnoncat.h5","test_set_y")
#----------------------------------- End --------------------------------------------#
#-------------------------------- How to plot an image --------------------------------------#
n<-2
r <- matrix(my_data_train_x[1,,,n]/255,ncol=64,nrow=64)
g <- matrix(my_data_train_x[2,,,n]/255,ncol=64)
b <- matrix(my_data_train_x[3,,,n]/255,ncol=64)
col <- rgb(r, g, b)
dim(col) <- dim(r)
col<-t(col)
grid.raster(col, interpolate=FALSE)
#----------------------------------- End --------------------------------------------#
#-------------------------------- Pre process data --------------------------------------#
#Train data
my_data_train<-data.frame(matrix(ncol=64*64*3))
for(i in 1:209){
print(i)
r <- matrix(my_data_train_x[1,,,i],ncol=64)
g <- matrix(my_data_train_x[2,,,i],ncol=64)
b <- matrix(my_data_train_x[3,,,i],ncol=64)
my_data_train[i,]<-c(as.vector(r),as.vector(g),as.vector(b))
}
my_data_train<-cbind(Y=my_data_train_y,my_data_train)
#Test data
my_data_test<-data.frame(matrix(ncol=64*64*3))
for(i in 1:50){
print(i)
r <- matrix(my_data_test_x[1,,,i],ncol=64)
g <- matrix(my_data_test_x[2,,,i],ncol=64)
b <- matrix(my_data_test_x[3,,,i],ncol=64)
my_data_test[i,]<-c(as.vector(r),as.vector(g),as.vector(b))
}
my_data_test<-cbind(Y=my_data_test_y,my_data_test)
#----------------------------------- End --------------------------------------------#
setwd("C:/Users/PC/Desktop/KSCHOOL_MASTER_DS/Supervised_Learning/Actualizado/Supervised_Learning/Computer_vision_(basic_deep_learning)/object_detection")
rm(list=ls())
#-------------------------------- Load data  --------------------------------------------#
h5ls("./data_in/train_catvnoncat.h5")
my_data_train_x <- h5read("./data_in/train_catvnoncat.h5","train_set_x")
my_data_train_y <- h5read("./data_in/train_catvnoncat.h5","train_set_y")
h5ls("./data_in/test_catvnoncat.h5")
my_data_test_x <- h5read("./data_in/test_catvnoncat.h5","test_set_x")
my_data_test_y <- h5read("./data_in/test_catvnoncat.h5","test_set_y")
#----------------------------------- End --------------------------------------------#
#-------------------------------- How to plot an image --------------------------------------#
n<-2
r <- matrix(my_data_train_x[1,,,n]/255,ncol=64,nrow=64)
g <- matrix(my_data_train_x[2,,,n]/255,ncol=64)
b <- matrix(my_data_train_x[3,,,n]/255,ncol=64)
col <- rgb(r, g, b)
dim(col) <- dim(r)
col<-t(col)
grid.raster(col, interpolate=FALSE)
#----------------------------------- End --------------------------------------------#
#-------------------------------- Pre process data --------------------------------------#
#Train data
my_data_train<-data.frame(matrix(ncol=64*64*3))
for(i in 1:209){
print(i)
r <- matrix(my_data_train_x[1,,,i],ncol=64)
g <- matrix(my_data_train_x[2,,,i],ncol=64)
b <- matrix(my_data_train_x[3,,,i],ncol=64)
my_data_train[i,]<-c(as.vector(r),as.vector(g),as.vector(b))
}
my_data_train<-cbind(Y=my_data_train_y,my_data_train)
#Test data
my_data_test<-data.frame(matrix(ncol=64*64*3))
for(i in 1:50){
print(i)
r <- matrix(my_data_test_x[1,,,i],ncol=64)
g <- matrix(my_data_test_x[2,,,i],ncol=64)
b <- matrix(my_data_test_x[3,,,i],ncol=64)
my_data_test[i,]<-c(as.vector(r),as.vector(g),as.vector(b))
}
my_data_test<-cbind(Y=my_data_test_y,my_data_test)
rm(list=ls())
#-------------------------------- Load data  --------------------------------------------#
h5ls("./data_in/train_catvnoncat.h5")
my_data_train_x <- h5read("./data_in/train_catvnoncat.h5","train_set_x")
my_data_train_y <- h5read("./data_in/train_catvnoncat.h5","train_set_y")
h5ls("./data_in/test_catvnoncat.h5")
my_data_test_x <- h5read("./data_in/test_catvnoncat.h5","test_set_x")
my_data_test_y <- h5read("./data_in/test_catvnoncat.h5","test_set_y")
#----------------------------------- End --------------------------------------------#
#-------------------------------- How to plot an image --------------------------------------#
n<-2
r <- matrix(my_data_train_x[1,,,n]/255,ncol=64,nrow=64)
g <- matrix(my_data_train_x[2,,,n]/255,ncol=64)
b <- matrix(my_data_train_x[3,,,n]/255,ncol=64)
col <- rgb(r, g, b)
dim(col) <- dim(r)
col<-t(col)
grid.raster(col, interpolate=FALSE)
#----------------------------------- End --------------------------------------------#
#-------------------------------- Pre process data --------------------------------------#
#Train data
my_data_train<-data.frame(matrix(ncol=64*64*3))
for(i in 1:209){
print(i)
r <- matrix(my_data_train_x[1,,,i],ncol=64)
g <- matrix(my_data_train_x[2,,,i],ncol=64)
b <- matrix(my_data_train_x[3,,,i],ncol=64)
my_data_train[i,]<-c(as.vector(r),as.vector(g),as.vector(b))
}
my_data_train<-cbind(Y=my_data_train_y,my_data_train)
#Test data
my_data_test<-data.frame(matrix(ncol=64*64*3))
for(i in 1:50){
print(i)
r <- matrix(my_data_test_x[1,,,i],ncol=64)
g <- matrix(my_data_test_x[2,,,i],ncol=64)
b <- matrix(my_data_test_x[3,,,i],ncol=64)
my_data_test[i,]<-c(as.vector(r),as.vector(g),as.vector(b))
}
my_data_test<-cbind(Y=my_data_test_y,my_data_test)
my_data_train_x <- h5read("./data_in/train_catvnoncat.h5","train_set_x")
my_data_train_x <- h5read("./data_in/train_catvnoncat.h5","train_set_x")
#if (!require("Rcpp")){install.packages('Rcpp',repos='http://cran.us.r-project.org');library("Rcpp")}
if (!require("Rcpp")){install.packages('Rcpp',quiet=T);library("Rcpp")}
if (!require("e1071")){install.packages('e1071');library("e1071")}
if (!require("grid")){install.packages("grid",quiet=T) ; library("grid")}
if (!require("stringi")){install.packages("stringi",quiet=T) ; library("stringi")}
if (!require("dplyr")){install.packages("dplyr",quiet=T) ; library("dplyr")}
if (!require("recipes")){install.packages("recipes",quiet=T) ; library("recipes")}
if (!require("caret")){install.packages("caret",quiet = T) ; library("caret")}
if (!require("RSNNS")){install.packages("RSNNS",quiet=T) ; library("RSNNS")}
if (!require("imager")){install.packages("imager",quiet=T) ; library("imager")}
#----- Corra estas lineas si no tiene instalada la librer?a rhdf5 -----#
#source("http://bioconductor.org/biocLite.R")
#biocLite("rhdf5")
library(rhdf5)
#---------- Fin: Corra estas lineas en una sola ejecucion -------------#
print("All packages and functions have been installed or loaded...")
rm(list=ls())
h5ls("./data_in/train_catvnoncat.h5")
#----- Corra estas lineas si no tiene instalada la librer?a rhdf5 -----#
#source("http://bioconductor.org/biocLite.R")
#biocLite("rhdf5")
library(rhdf5)
#----- Corra estas lineas si no tiene instalada la librer?a rhdf5 -----#
#source("http://bioconductor.org/biocLite.R")
#biocLite("rhdf5")
library(rhdf5)
#---------- Fin:
#----- Corra estas lineas si no tiene instalada la librer?a rhdf5 -----#
#source("http://bioconductor.org/biocLite.R")
#biocLite("rhdf5")
library(rhdf5)
